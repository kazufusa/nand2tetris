package computer

import (
	"math"

	logic "github.com/kazufusa/nand2tetris/01_Boolean_Logic"
)

const (
	NROW   = 256
	NCOL   = 512
	NROW_W = NROW
	NCOL_W = NCOL / 16
	NROW_C = NROW / 4
	NCOL_C = NCOL / 2
)

var (
	_ IScreen = (*TuiScreen)(nil)

	B0  = int(math.Pow(2, 0))
	B1  = int(math.Pow(2, 1))
	B2  = int(math.Pow(2, 2))
	B3  = int(math.Pow(2, 3))
	B4  = int(math.Pow(2, 4))
	B5  = int(math.Pow(2, 5))
	B6  = int(math.Pow(2, 6))
	B7  = int(math.Pow(2, 7))
	B8  = int(math.Pow(2, 8))
	B9  = int(math.Pow(2, 9))
	B10 = int(math.Pow(2, 10))
	B11 = int(math.Pow(2, 11))
	B12 = int(math.Pow(2, 12))
	B13 = int(math.Pow(2, 13))
	B14 = int(math.Pow(2, 14))
	B15 = int(math.Pow(2, 15))
	B16 = int(math.Pow(2, 16))
)

// 256 rows and 512 columns
// 0 <= r <= 255
// 0 <= c <= 511
// Screen[r*32+c/16]
type TuiScreen struct {
	words [NROW * NCOL / 16]Word
}

func (s *TuiScreen) Fetch(in Word, load Bit, addr [13]Bit) Word {
	defer func() {
		if load == logic.I {
			s.words[s.addr2index(addr)] = in
		}
	}()
	return s.words[s.addr2index(addr)]
}

func (s *TuiScreen) addr2index(addr [13]Bit) int {
	return (B0)*int(addr[0]) +
		(B1)*int(addr[1]) +
		(B2)*int(addr[2]) +
		(B3)*int(addr[3]) +
		(B4)*int(addr[4]) +
		(B5)*int(addr[5]) +
		(B6)*int(addr[6]) +
		(B7)*int(addr[7]) +
		(B8)*int(addr[8]) +
		(B9)*int(addr[9]) +
		(B10)*int(addr[10]) +
		(B11)*int(addr[11]) +
		(B12)*int(addr[12])
}

func (s *TuiScreen) coord2wordsIndex(r, c int) int {
	return r*32 + c/16
}

func (s *TuiScreen) Str() string {
	retRune := make([]rune, NROW_C*(NCOL_C+1))
	for r := 0; r < NROW_C; r++ {
		for c := 0; c < NCOL_C; c++ {
			retRune[r*(NCOL_C+1)+c] = s.char(r, c)
		}
		retRune[r*(NCOL_C+1)+NCOL_C] = '\n'
	}
	return string(retRune)
}

func (s *TuiScreen) char(r, c int) rune {
	w1Index := s.coord2wordsIndex(r*4, c*2)
	w2Index := w1Index + 32
	w3Index := w2Index + 32
	w4Index := w3Index + 32
	iw := (8 - c%8) * 2

	var code [8]uint8
	copy(code[0:2], s.words[w1Index][iw-2:iw])
	copy(code[2:4], s.words[w2Index][iw-2:iw])
	copy(code[4:6], s.words[w3Index][iw-2:iw])
	copy(code[6:8], s.words[w4Index][iw-2:iw])
	return Brailles[code]
}

var Brailles = map[[8]logic.Bit]rune{
	{0, 0, 0, 0, 0, 0, 0, 0}: '⠀',
	{0, 1, 0, 0, 0, 0, 0, 0}: '⠁',
	{0, 0, 0, 1, 0, 0, 0, 0}: '⠂',
	{0, 1, 0, 1, 0, 0, 0, 0}: '⠃',
	{0, 0, 0, 0, 0, 1, 0, 0}: '⠄',
	{0, 1, 0, 0, 0, 1, 0, 0}: '⠅',
	{0, 0, 0, 1, 0, 1, 0, 0}: '⠆',
	{0, 1, 0, 1, 0, 1, 0, 0}: '⠇',
	{1, 0, 0, 0, 0, 0, 0, 0}: '⠈',
	{1, 1, 0, 0, 0, 0, 0, 0}: '⠉',
	{1, 0, 0, 1, 0, 0, 0, 0}: '⠊',
	{1, 1, 0, 1, 0, 0, 0, 0}: '⠋',
	{1, 0, 0, 0, 0, 1, 0, 0}: '⠌',
	{1, 1, 0, 0, 0, 1, 0, 0}: '⠍',
	{1, 0, 0, 1, 0, 1, 0, 0}: '⠎',
	{1, 1, 0, 1, 0, 1, 0, 0}: '⠏',
	{0, 0, 1, 0, 0, 0, 0, 0}: '⠐',
	{0, 1, 1, 0, 0, 0, 0, 0}: '⠑',
	{0, 0, 1, 1, 0, 0, 0, 0}: '⠒',
	{0, 1, 1, 1, 0, 0, 0, 0}: '⠓',
	{0, 0, 1, 0, 0, 1, 0, 0}: '⠔',
	{0, 1, 1, 0, 0, 1, 0, 0}: '⠕',
	{0, 0, 1, 1, 0, 1, 0, 0}: '⠖',
	{0, 1, 1, 1, 0, 1, 0, 0}: '⠗',
	{1, 0, 1, 0, 0, 0, 0, 0}: '⠘',
	{1, 1, 1, 0, 0, 0, 0, 0}: '⠙',
	{1, 0, 1, 1, 0, 0, 0, 0}: '⠚',
	{1, 1, 1, 1, 0, 0, 0, 0}: '⠛',
	{1, 0, 1, 0, 0, 1, 0, 0}: '⠜',
	{1, 1, 1, 0, 0, 1, 0, 0}: '⠝',
	{1, 0, 1, 1, 0, 1, 0, 0}: '⠞',
	{1, 1, 1, 1, 0, 1, 0, 0}: '⠟',
	{0, 0, 0, 0, 1, 0, 0, 0}: '⠠',
	{0, 1, 0, 0, 1, 0, 0, 0}: '⠡',
	{0, 0, 0, 1, 1, 0, 0, 0}: '⠢',
	{0, 1, 0, 1, 1, 0, 0, 0}: '⠣',
	{0, 0, 0, 0, 1, 1, 0, 0}: '⠤',
	{0, 1, 0, 0, 1, 1, 0, 0}: '⠥',
	{0, 0, 0, 1, 1, 1, 0, 0}: '⠦',
	{0, 1, 0, 1, 1, 1, 0, 0}: '⠧',
	{1, 0, 0, 0, 1, 0, 0, 0}: '⠨',
	{1, 1, 0, 0, 1, 0, 0, 0}: '⠩',
	{1, 0, 0, 1, 1, 0, 0, 0}: '⠪',
	{1, 1, 0, 1, 1, 0, 0, 0}: '⠫',
	{1, 0, 0, 0, 1, 1, 0, 0}: '⠬',
	{1, 1, 0, 0, 1, 1, 0, 0}: '⠭',
	{1, 0, 0, 1, 1, 1, 0, 0}: '⠮',
	{1, 1, 0, 1, 1, 1, 0, 0}: '⠯',
	{0, 0, 1, 0, 1, 0, 0, 0}: '⠰',
	{0, 1, 1, 0, 1, 0, 0, 0}: '⠱',
	{0, 0, 1, 1, 1, 0, 0, 0}: '⠲',
	{0, 1, 1, 1, 1, 0, 0, 0}: '⠳',
	{0, 0, 1, 0, 1, 1, 0, 0}: '⠴',
	{0, 1, 1, 0, 1, 1, 0, 0}: '⠵',
	{0, 0, 1, 1, 1, 1, 0, 0}: '⠶',
	{0, 1, 1, 1, 1, 1, 0, 0}: '⠷',
	{1, 0, 1, 0, 1, 0, 0, 0}: '⠸',
	{1, 1, 1, 0, 1, 0, 0, 0}: '⠹',
	{1, 0, 1, 1, 1, 0, 0, 0}: '⠺',
	{1, 1, 1, 1, 1, 0, 0, 0}: '⠻',
	{1, 0, 1, 0, 1, 1, 0, 0}: '⠼',
	{1, 1, 1, 0, 1, 1, 0, 0}: '⠽',
	{1, 0, 1, 1, 1, 1, 0, 0}: '⠾',
	{1, 1, 1, 1, 1, 1, 0, 0}: '⠿',
	{0, 0, 0, 0, 0, 0, 0, 1}: '⡀',
	{0, 1, 0, 0, 0, 0, 0, 1}: '⡁',
	{0, 0, 0, 1, 0, 0, 0, 1}: '⡂',
	{0, 1, 0, 1, 0, 0, 0, 1}: '⡃',
	{0, 0, 0, 0, 0, 1, 0, 1}: '⡄',
	{0, 1, 0, 0, 0, 1, 0, 1}: '⡅',
	{0, 0, 0, 1, 0, 1, 0, 1}: '⡆',
	{0, 1, 0, 1, 0, 1, 0, 1}: '⡇',
	{1, 0, 0, 0, 0, 0, 0, 1}: '⡈',
	{1, 1, 0, 0, 0, 0, 0, 1}: '⡉',
	{1, 0, 0, 1, 0, 0, 0, 1}: '⡊',
	{1, 1, 0, 1, 0, 0, 0, 1}: '⡋',
	{1, 0, 0, 0, 0, 1, 0, 1}: '⡌',
	{1, 1, 0, 0, 0, 1, 0, 1}: '⡍',
	{1, 0, 0, 1, 0, 1, 0, 1}: '⡎',
	{1, 1, 0, 1, 0, 1, 0, 1}: '⡏',
	{0, 0, 1, 0, 0, 0, 0, 1}: '⡐',
	{0, 1, 1, 0, 0, 0, 0, 1}: '⡑',
	{0, 0, 1, 1, 0, 0, 0, 1}: '⡒',
	{0, 1, 1, 1, 0, 0, 0, 1}: '⡓',
	{0, 0, 1, 0, 0, 1, 0, 1}: '⡔',
	{0, 1, 1, 0, 0, 1, 0, 1}: '⡕',
	{0, 0, 1, 1, 0, 1, 0, 1}: '⡖',
	{0, 1, 1, 1, 0, 1, 0, 1}: '⡗',
	{1, 0, 1, 0, 0, 0, 0, 1}: '⡘',
	{1, 1, 1, 0, 0, 0, 0, 1}: '⡙',
	{1, 0, 1, 1, 0, 0, 0, 1}: '⡚',
	{1, 1, 1, 1, 0, 0, 0, 1}: '⡛',
	{1, 0, 1, 0, 0, 1, 0, 1}: '⡜',
	{1, 1, 1, 0, 0, 1, 0, 1}: '⡝',
	{1, 0, 1, 1, 0, 1, 0, 1}: '⡞',
	{1, 1, 1, 1, 0, 1, 0, 1}: '⡟',
	{0, 0, 0, 0, 1, 0, 0, 1}: '⡠',
	{0, 1, 0, 0, 1, 0, 0, 1}: '⡡',
	{0, 0, 0, 1, 1, 0, 0, 1}: '⡢',
	{0, 1, 0, 1, 1, 0, 0, 1}: '⡣',
	{0, 0, 0, 0, 1, 1, 0, 1}: '⡤',
	{0, 1, 0, 0, 1, 1, 0, 1}: '⡥',
	{0, 0, 0, 1, 1, 1, 0, 1}: '⡦',
	{0, 1, 0, 1, 1, 1, 0, 1}: '⡧',
	{1, 0, 0, 0, 1, 0, 0, 1}: '⡨',
	{1, 1, 0, 0, 1, 0, 0, 1}: '⡩',
	{1, 0, 0, 1, 1, 0, 0, 1}: '⡪',
	{1, 1, 0, 1, 1, 0, 0, 1}: '⡫',
	{1, 0, 0, 0, 1, 1, 0, 1}: '⡬',
	{1, 1, 0, 0, 1, 1, 0, 1}: '⡭',
	{1, 0, 0, 1, 1, 1, 0, 1}: '⡮',
	{1, 1, 0, 1, 1, 1, 0, 1}: '⡯',
	{0, 0, 1, 0, 1, 0, 0, 1}: '⡰',
	{0, 1, 1, 0, 1, 0, 0, 1}: '⡱',
	{0, 0, 1, 1, 1, 0, 0, 1}: '⡲',
	{0, 1, 1, 1, 1, 0, 0, 1}: '⡳',
	{0, 0, 1, 0, 1, 1, 0, 1}: '⡴',
	{0, 1, 1, 0, 1, 1, 0, 1}: '⡵',
	{0, 0, 1, 1, 1, 1, 0, 1}: '⡶',
	{0, 1, 1, 1, 1, 1, 0, 1}: '⡷',
	{1, 0, 1, 0, 1, 0, 0, 1}: '⡸',
	{1, 1, 1, 0, 1, 0, 0, 1}: '⡹',
	{1, 0, 1, 1, 1, 0, 0, 1}: '⡺',
	{1, 1, 1, 1, 1, 0, 0, 1}: '⡻',
	{1, 0, 1, 0, 1, 1, 0, 1}: '⡼',
	{1, 1, 1, 0, 1, 1, 0, 1}: '⡽',
	{1, 0, 1, 1, 1, 1, 0, 1}: '⡾',
	{1, 1, 1, 1, 1, 1, 0, 1}: '⡿',
	{0, 0, 0, 0, 0, 0, 1, 0}: '⢀',
	{0, 1, 0, 0, 0, 0, 1, 0}: '⢁',
	{0, 0, 0, 1, 0, 0, 1, 0}: '⢂',
	{0, 1, 0, 1, 0, 0, 1, 0}: '⢃',
	{0, 0, 0, 0, 0, 1, 1, 0}: '⢄',
	{0, 1, 0, 0, 0, 1, 1, 0}: '⢅',
	{0, 0, 0, 1, 0, 1, 1, 0}: '⢆',
	{0, 1, 0, 1, 0, 1, 1, 0}: '⢇',
	{1, 0, 0, 0, 0, 0, 1, 0}: '⢈',
	{1, 1, 0, 0, 0, 0, 1, 0}: '⢉',
	{1, 0, 0, 1, 0, 0, 1, 0}: '⢊',
	{1, 1, 0, 1, 0, 0, 1, 0}: '⢋',
	{1, 0, 0, 0, 0, 1, 1, 0}: '⢌',
	{1, 1, 0, 0, 0, 1, 1, 0}: '⢍',
	{1, 0, 0, 1, 0, 1, 1, 0}: '⢎',
	{1, 1, 0, 1, 0, 1, 1, 0}: '⢏',
	{0, 0, 1, 0, 0, 0, 1, 0}: '⢐',
	{0, 1, 1, 0, 0, 0, 1, 0}: '⢑',
	{0, 0, 1, 1, 0, 0, 1, 0}: '⢒',
	{0, 1, 1, 1, 0, 0, 1, 0}: '⢓',
	{0, 0, 1, 0, 0, 1, 1, 0}: '⢔',
	{0, 1, 1, 0, 0, 1, 1, 0}: '⢕',
	{0, 0, 1, 1, 0, 1, 1, 0}: '⢖',
	{0, 1, 1, 1, 0, 1, 1, 0}: '⢗',
	{1, 0, 1, 0, 0, 0, 1, 0}: '⢘',
	{1, 1, 1, 0, 0, 0, 1, 0}: '⢙',
	{1, 0, 1, 1, 0, 0, 1, 0}: '⢚',
	{1, 1, 1, 1, 0, 0, 1, 0}: '⢛',
	{1, 0, 1, 0, 0, 1, 1, 0}: '⢜',
	{1, 1, 1, 0, 0, 1, 1, 0}: '⢝',
	{1, 0, 1, 1, 0, 1, 1, 0}: '⢞',
	{1, 1, 1, 1, 0, 1, 1, 0}: '⢟',
	{0, 0, 0, 0, 1, 0, 1, 0}: '⢠',
	{0, 1, 0, 0, 1, 0, 1, 0}: '⢡',
	{0, 0, 0, 1, 1, 0, 1, 0}: '⢢',
	{0, 1, 0, 1, 1, 0, 1, 0}: '⢣',
	{0, 0, 0, 0, 1, 1, 1, 0}: '⢤',
	{0, 1, 0, 0, 1, 1, 1, 0}: '⢥',
	{0, 0, 0, 1, 1, 1, 1, 0}: '⢦',
	{0, 1, 0, 1, 1, 1, 1, 0}: '⢧',
	{1, 0, 0, 0, 1, 0, 1, 0}: '⢨',
	{1, 1, 0, 0, 1, 0, 1, 0}: '⢩',
	{1, 0, 0, 1, 1, 0, 1, 0}: '⢪',
	{1, 1, 0, 1, 1, 0, 1, 0}: '⢫',
	{1, 0, 0, 0, 1, 1, 1, 0}: '⢬',
	{1, 1, 0, 0, 1, 1, 1, 0}: '⢭',
	{1, 0, 0, 1, 1, 1, 1, 0}: '⢮',
	{1, 1, 0, 1, 1, 1, 1, 0}: '⢯',
	{0, 0, 1, 0, 1, 0, 1, 0}: '⢰',
	{0, 1, 1, 0, 1, 0, 1, 0}: '⢱',
	{0, 0, 1, 1, 1, 0, 1, 0}: '⢲',
	{0, 1, 1, 1, 1, 0, 1, 0}: '⢳',
	{0, 0, 1, 0, 1, 1, 1, 0}: '⢴',
	{0, 1, 1, 0, 1, 1, 1, 0}: '⢵',
	{0, 0, 1, 1, 1, 1, 1, 0}: '⢶',
	{0, 1, 1, 1, 1, 1, 1, 0}: '⢷',
	{1, 0, 1, 0, 1, 0, 1, 0}: '⢸',
	{1, 1, 1, 0, 1, 0, 1, 0}: '⢹',
	{1, 0, 1, 1, 1, 0, 1, 0}: '⢺',
	{1, 1, 1, 1, 1, 0, 1, 0}: '⢻',
	{1, 0, 1, 0, 1, 1, 1, 0}: '⢼',
	{1, 1, 1, 0, 1, 1, 1, 0}: '⢽',
	{1, 0, 1, 1, 1, 1, 1, 0}: '⢾',
	{1, 1, 1, 1, 1, 1, 1, 0}: '⢿',
	{0, 0, 0, 0, 0, 0, 1, 1}: '⣀',
	{0, 1, 0, 0, 0, 0, 1, 1}: '⣁',
	{0, 0, 0, 1, 0, 0, 1, 1}: '⣂',
	{0, 1, 0, 1, 0, 0, 1, 1}: '⣃',
	{0, 0, 0, 0, 0, 1, 1, 1}: '⣄',
	{0, 1, 0, 0, 0, 1, 1, 1}: '⣅',
	{0, 0, 0, 1, 0, 1, 1, 1}: '⣆',
	{0, 1, 0, 1, 0, 1, 1, 1}: '⣇',
	{1, 0, 0, 0, 0, 0, 1, 1}: '⣈',
	{1, 1, 0, 0, 0, 0, 1, 1}: '⣉',
	{1, 0, 0, 1, 0, 0, 1, 1}: '⣊',
	{1, 1, 0, 1, 0, 0, 1, 1}: '⣋',
	{1, 0, 0, 0, 0, 1, 1, 1}: '⣌',
	{1, 1, 0, 0, 0, 1, 1, 1}: '⣍',
	{1, 0, 0, 1, 0, 1, 1, 1}: '⣎',
	{1, 1, 0, 1, 0, 1, 1, 1}: '⣏',
	{0, 0, 1, 0, 0, 0, 1, 1}: '⣐',
	{0, 1, 1, 0, 0, 0, 1, 1}: '⣑',
	{0, 0, 1, 1, 0, 0, 1, 1}: '⣒',
	{0, 1, 1, 1, 0, 0, 1, 1}: '⣓',
	{0, 0, 1, 0, 0, 1, 1, 1}: '⣔',
	{0, 1, 1, 0, 0, 1, 1, 1}: '⣕',
	{0, 0, 1, 1, 0, 1, 1, 1}: '⣖',
	{0, 1, 1, 1, 0, 1, 1, 1}: '⣗',
	{1, 0, 1, 0, 0, 0, 1, 1}: '⣘',
	{1, 1, 1, 0, 0, 0, 1, 1}: '⣙',
	{1, 0, 1, 1, 0, 0, 1, 1}: '⣚',
	{1, 1, 1, 1, 0, 0, 1, 1}: '⣛',
	{1, 0, 1, 0, 0, 1, 1, 1}: '⣜',
	{1, 1, 1, 0, 0, 1, 1, 1}: '⣝',
	{1, 0, 1, 1, 0, 1, 1, 1}: '⣞',
	{1, 1, 1, 1, 0, 1, 1, 1}: '⣟',
	{0, 0, 0, 0, 1, 0, 1, 1}: '⣠',
	{0, 1, 0, 0, 1, 0, 1, 1}: '⣡',
	{0, 0, 0, 1, 1, 0, 1, 1}: '⣢',
	{0, 1, 0, 1, 1, 0, 1, 1}: '⣣',
	{0, 0, 0, 0, 1, 1, 1, 1}: '⣤',
	{0, 1, 0, 0, 1, 1, 1, 1}: '⣥',
	{0, 0, 0, 1, 1, 1, 1, 1}: '⣦',
	{0, 1, 0, 1, 1, 1, 1, 1}: '⣧',
	{1, 0, 0, 0, 1, 0, 1, 1}: '⣨',
	{1, 1, 0, 0, 1, 0, 1, 1}: '⣩',
	{1, 0, 0, 1, 1, 0, 1, 1}: '⣪',
	{1, 1, 0, 1, 1, 0, 1, 1}: '⣫',
	{1, 0, 0, 0, 1, 1, 1, 1}: '⣬',
	{1, 1, 0, 0, 1, 1, 1, 1}: '⣭',
	{1, 0, 0, 1, 1, 1, 1, 1}: '⣮',
	{1, 1, 0, 1, 1, 1, 1, 1}: '⣯',
	{0, 0, 1, 0, 1, 0, 1, 1}: '⣰',
	{0, 1, 1, 0, 1, 0, 1, 1}: '⣱',
	{0, 0, 1, 1, 1, 0, 1, 1}: '⣲',
	{0, 1, 1, 1, 1, 0, 1, 1}: '⣳',
	{0, 0, 1, 0, 1, 1, 1, 1}: '⣴',
	{0, 1, 1, 0, 1, 1, 1, 1}: '⣵',
	{0, 0, 1, 1, 1, 1, 1, 1}: '⣶',
	{0, 1, 1, 1, 1, 1, 1, 1}: '⣷',
	{1, 0, 1, 0, 1, 0, 1, 1}: '⣸',
	{1, 1, 1, 0, 1, 0, 1, 1}: '⣹',
	{1, 0, 1, 1, 1, 0, 1, 1}: '⣺',
	{1, 1, 1, 1, 1, 0, 1, 1}: '⣻',
	{1, 0, 1, 0, 1, 1, 1, 1}: '⣼',
	{1, 1, 1, 0, 1, 1, 1, 1}: '⣽',
	{1, 0, 1, 1, 1, 1, 1, 1}: '⣾',
	{1, 1, 1, 1, 1, 1, 1, 1}: '⣿',
}
