package vmI

// Specification
// - Push/pop commands transfer data between the stack and memory segments
// - Arithmetic-logical commands perform arithmetic and logical operations
//   - add, sub, neg, eq, gt, lt, and, or, no
// ( - Branching commands facilitate conditional and unconditional branching operations )
// ( - Function commands facilitate function call-and-return operations )

// RAM addresses
// 0-15     Sixteen virtual registers
// 16-255   Static variables
// 256-2047 Stack

// SP          RAM[0]      Stack Pointer
// LCL         RAM[1]      Base address of the local segment
// ARG         RAM[2]      Base address of the argument segment
// THIS        RAM[3]      Base address of the this segment
// THAT        RAM[4]      Base address of the that segment
// TEMP        RAM[5-12]   holds the temp segment
// R13,R14,R15 RAM[13-15]  if the assembly code generated by the VM translator needs variables, it can use these registers

type Command int

const (
	C_ALITHMETIC Command = iota
	C_PUSH
	C_POP
	C_LABEL
	C_GOTO
	C_IF
	C_FUNCTION
	C_RETURN
	C_CALL
)

type Parser struct{}

func (p *Parser) hasMoreLines() bool { return false }
func (p *Parser) advance()           {}
func (p *Parser) commandType()       {}
func (p *Parser) arg1() string       { return "" }
func (p *Parser) arg2() int          { return 0 }
